name: Integration Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  integration:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        working-directory: ./dfs

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./dfs/go.mod
          cache: true

      # Run the stack and stream logs to a file
      - name: Run integration tests (capture logs)
        id: tests
        run: |
          set -o pipefail
          mkdir -p ./tests/integration/logs
          docker compose -f docker-compose.test.yml \
            up --build --exit-code-from integration-runner 2>&1 \
            | tee ./tests/integration/logs/compose-output.log

      # Always grab full container logs too
      - name: Collect docker logs
        if: always()
        run: |
          docker compose -f docker-compose.test.yml logs --no-color --timestamps \
            > ./tests/integration/logs/compose-logs-full.txt

      # Save both log files as artifacts
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-logs-${{ github.run_id }}
          path: |
            ./tests/integration/logs/compose-output.log
            ./tests/integration/logs/compose-logs-full.txt

      # Tear down the environment regardless of test result
      - name: Shutdown environment
        if: always()
        run: |
          docker compose -f docker-compose.test.yml down --volumes --remove-orphans