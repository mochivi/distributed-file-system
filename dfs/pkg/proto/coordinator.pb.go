// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: coordinator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Upload file request/response
type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_coordinator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UploadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadRequest) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

type UploadResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChunkLocations []*ChunkLocation       `protobuf:"bytes,1,rep,name=chunk_locations,json=chunkLocations,proto3" json:"chunk_locations,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_coordinator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResponse) GetChunkLocations() []*ChunkLocation {
	if x != nil {
		return x.ChunkLocations
	}
	return nil
}

type ChunkLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	NodeIds       []string               `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"` // Primary + replicas
	Endpoints     []string               `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints,omitempty"`            // Where to upload
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkLocation) Reset() {
	*x = ChunkLocation{}
	mi := &file_coordinator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkLocation) ProtoMessage() {}

func (x *ChunkLocation) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkLocation.ProtoReflect.Descriptor instead.
func (*ChunkLocation) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkLocation) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *ChunkLocation) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *ChunkLocation) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

// Download file request/response
type DownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	mi := &file_coordinator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DownloadResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FileInfo       *FileInfo              `protobuf:"bytes,1,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	ChunkLocations []*ChunkLocation       `protobuf:"bytes,2,rep,name=chunk_locations,json=chunkLocations,proto3" json:"chunk_locations,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	mi := &file_coordinator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadResponse) GetFileInfo() *FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *DownloadResponse) GetChunkLocations() []*ChunkLocation {
	if x != nil {
		return x.ChunkLocations
	}
	return nil
}

// Delete file request/response
type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_coordinator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_coordinator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// List files request/response
type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Directory     string                 `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_coordinator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{7}
}

func (x *ListRequest) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfo            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_coordinator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{8}
}

func (x *ListResponse) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

// Node management
type RegisterDataNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeInfo      *DataNodeInfo          `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDataNodeRequest) Reset() {
	*x = RegisterDataNodeRequest{}
	mi := &file_coordinator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDataNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeRequest) ProtoMessage() {}

func (x *RegisterDataNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterDataNodeRequest) GetNodeInfo() *DataNodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

type RegisterDataNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDataNodeResponse) Reset() {
	*x = RegisterDataNodeResponse{}
	mi := &file_coordinator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDataNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeResponse) ProtoMessage() {}

func (x *RegisterDataNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterDataNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterDataNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status        *HealthStatus          `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_coordinator_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{11}
}

func (x *HeartbeatRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *HeartbeatRequest) GetStatus() *HealthStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_coordinator_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{12}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_coordinator_proto protoreflect.FileDescriptor

const file_coordinator_proto_rawDesc = "" +
	"\n" +
	"\x11coordinator.proto\x12\x03dfs\x1a\fcommon.proto\"V\n" +
	"\rUploadRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x03 \x01(\x03R\tchunkSize\"M\n" +
	"\x0eUploadResponse\x12;\n" +
	"\x0fchunk_locations\x18\x01 \x03(\v2\x12.dfs.ChunkLocationR\x0echunkLocations\"c\n" +
	"\rChunkLocation\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12\x19\n" +
	"\bnode_ids\x18\x02 \x03(\tR\anodeIds\x12\x1c\n" +
	"\tendpoints\x18\x03 \x03(\tR\tendpoints\"%\n" +
	"\x0fDownloadRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"{\n" +
	"\x10DownloadResponse\x12*\n" +
	"\tfile_info\x18\x01 \x01(\v2\r.dfs.FileInfoR\bfileInfo\x12;\n" +
	"\x0fchunk_locations\x18\x02 \x03(\v2\x12.dfs.ChunkLocationR\x0echunkLocations\"#\n" +
	"\rDeleteRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"D\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"+\n" +
	"\vListRequest\x12\x1c\n" +
	"\tdirectory\x18\x01 \x01(\tR\tdirectory\"3\n" +
	"\fListResponse\x12#\n" +
	"\x05files\x18\x01 \x03(\v2\r.dfs.FileInfoR\x05files\"I\n" +
	"\x17RegisterDataNodeRequest\x12.\n" +
	"\tnode_info\x18\x01 \x01(\v2\x11.dfs.DataNodeInfoR\bnodeInfo\"N\n" +
	"\x18RegisterDataNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"V\n" +
	"\x10HeartbeatRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12)\n" +
	"\x06status\x18\x02 \x01(\v2\x11.dfs.HealthStatusR\x06status\"-\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x86\x03\n" +
	"\x12CoordinatorService\x125\n" +
	"\n" +
	"UploadFile\x12\x12.dfs.UploadRequest\x1a\x13.dfs.UploadResponse\x12;\n" +
	"\fDownloadFile\x12\x14.dfs.DownloadRequest\x1a\x15.dfs.DownloadResponse\x125\n" +
	"\n" +
	"DeleteFile\x12\x12.dfs.DeleteRequest\x1a\x13.dfs.DeleteResponse\x120\n" +
	"\tListFiles\x12\x10.dfs.ListRequest\x1a\x11.dfs.ListResponse\x12O\n" +
	"\x10RegisterDataNode\x12\x1c.dfs.RegisterDataNodeRequest\x1a\x1d.dfs.RegisterDataNodeResponse\x12B\n" +
	"\x11DataNodeHeartbeat\x12\x15.dfs.HeartbeatRequest\x1a\x16.dfs.HeartbeatResponseB\vZ\tpkg/protob\x06proto3"

var (
	file_coordinator_proto_rawDescOnce sync.Once
	file_coordinator_proto_rawDescData []byte
)

func file_coordinator_proto_rawDescGZIP() []byte {
	file_coordinator_proto_rawDescOnce.Do(func() {
		file_coordinator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_coordinator_proto_rawDesc), len(file_coordinator_proto_rawDesc)))
	})
	return file_coordinator_proto_rawDescData
}

var file_coordinator_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_coordinator_proto_goTypes = []any{
	(*UploadRequest)(nil),            // 0: dfs.UploadRequest
	(*UploadResponse)(nil),           // 1: dfs.UploadResponse
	(*ChunkLocation)(nil),            // 2: dfs.ChunkLocation
	(*DownloadRequest)(nil),          // 3: dfs.DownloadRequest
	(*DownloadResponse)(nil),         // 4: dfs.DownloadResponse
	(*DeleteRequest)(nil),            // 5: dfs.DeleteRequest
	(*DeleteResponse)(nil),           // 6: dfs.DeleteResponse
	(*ListRequest)(nil),              // 7: dfs.ListRequest
	(*ListResponse)(nil),             // 8: dfs.ListResponse
	(*RegisterDataNodeRequest)(nil),  // 9: dfs.RegisterDataNodeRequest
	(*RegisterDataNodeResponse)(nil), // 10: dfs.RegisterDataNodeResponse
	(*HeartbeatRequest)(nil),         // 11: dfs.HeartbeatRequest
	(*HeartbeatResponse)(nil),        // 12: dfs.HeartbeatResponse
	(*FileInfo)(nil),                 // 13: dfs.FileInfo
	(*DataNodeInfo)(nil),             // 14: dfs.DataNodeInfo
	(*HealthStatus)(nil),             // 15: dfs.HealthStatus
}
var file_coordinator_proto_depIdxs = []int32{
	2,  // 0: dfs.UploadResponse.chunk_locations:type_name -> dfs.ChunkLocation
	13, // 1: dfs.DownloadResponse.file_info:type_name -> dfs.FileInfo
	2,  // 2: dfs.DownloadResponse.chunk_locations:type_name -> dfs.ChunkLocation
	13, // 3: dfs.ListResponse.files:type_name -> dfs.FileInfo
	14, // 4: dfs.RegisterDataNodeRequest.node_info:type_name -> dfs.DataNodeInfo
	15, // 5: dfs.HeartbeatRequest.status:type_name -> dfs.HealthStatus
	0,  // 6: dfs.CoordinatorService.UploadFile:input_type -> dfs.UploadRequest
	3,  // 7: dfs.CoordinatorService.DownloadFile:input_type -> dfs.DownloadRequest
	5,  // 8: dfs.CoordinatorService.DeleteFile:input_type -> dfs.DeleteRequest
	7,  // 9: dfs.CoordinatorService.ListFiles:input_type -> dfs.ListRequest
	9,  // 10: dfs.CoordinatorService.RegisterDataNode:input_type -> dfs.RegisterDataNodeRequest
	11, // 11: dfs.CoordinatorService.DataNodeHeartbeat:input_type -> dfs.HeartbeatRequest
	1,  // 12: dfs.CoordinatorService.UploadFile:output_type -> dfs.UploadResponse
	4,  // 13: dfs.CoordinatorService.DownloadFile:output_type -> dfs.DownloadResponse
	6,  // 14: dfs.CoordinatorService.DeleteFile:output_type -> dfs.DeleteResponse
	8,  // 15: dfs.CoordinatorService.ListFiles:output_type -> dfs.ListResponse
	10, // 16: dfs.CoordinatorService.RegisterDataNode:output_type -> dfs.RegisterDataNodeResponse
	12, // 17: dfs.CoordinatorService.DataNodeHeartbeat:output_type -> dfs.HeartbeatResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_coordinator_proto_init() }
func file_coordinator_proto_init() {
	if File_coordinator_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_coordinator_proto_rawDesc), len(file_coordinator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coordinator_proto_goTypes,
		DependencyIndexes: file_coordinator_proto_depIdxs,
		MessageInfos:      file_coordinator_proto_msgTypes,
	}.Build()
	File_coordinator_proto = out.File
	file_coordinator_proto_goTypes = nil
	file_coordinator_proto_depIdxs = nil
}
