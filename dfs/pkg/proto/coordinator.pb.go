// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: coordinator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeUpdate_UpdateType int32

const (
	NodeUpdate_NODE_ADDED   NodeUpdate_UpdateType = 0
	NodeUpdate_NODE_REMOVED NodeUpdate_UpdateType = 1
	NodeUpdate_NODE_UPDATED NodeUpdate_UpdateType = 2
)

// Enum value maps for NodeUpdate_UpdateType.
var (
	NodeUpdate_UpdateType_name = map[int32]string{
		0: "NODE_ADDED",
		1: "NODE_REMOVED",
		2: "NODE_UPDATED",
	}
	NodeUpdate_UpdateType_value = map[string]int32{
		"NODE_ADDED":   0,
		"NODE_REMOVED": 1,
		"NODE_UPDATED": 2,
	}
)

func (x NodeUpdate_UpdateType) Enum() *NodeUpdate_UpdateType {
	p := new(NodeUpdate_UpdateType)
	*p = x
	return p
}

func (x NodeUpdate_UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeUpdate_UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_coordinator_proto_enumTypes[0].Descriptor()
}

func (NodeUpdate_UpdateType) Type() protoreflect.EnumType {
	return &file_coordinator_proto_enumTypes[0]
}

func (x NodeUpdate_UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeUpdate_UpdateType.Descriptor instead.
func (NodeUpdate_UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{17, 0}
}

// Upload file request/response
type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	Checksum      string                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_coordinator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UploadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadRequest) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *UploadRequest) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type UploadResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChunkLocations []*ChunkLocation       `protobuf:"bytes,1,rep,name=chunk_locations,json=chunkLocations,proto3" json:"chunk_locations,omitempty"`
	SessionId      string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_coordinator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResponse) GetChunkLocations() []*ChunkLocation {
	if x != nil {
		return x.ChunkLocations
	}
	return nil
}

func (x *UploadResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ChunkLocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Nodes         []*DataNodeInfo        `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkLocation) Reset() {
	*x = ChunkLocation{}
	mi := &file_coordinator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkLocation) ProtoMessage() {}

func (x *ChunkLocation) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkLocation.ProtoReflect.Descriptor instead.
func (*ChunkLocation) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkLocation) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *ChunkLocation) GetNodes() []*DataNodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// Download file request/response
type DownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	mi := &file_coordinator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DownloadResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FileInfo       *FileInfo              `protobuf:"bytes,1,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	ChunkLocations []*ChunkLocation       `protobuf:"bytes,2,rep,name=chunk_locations,json=chunkLocations,proto3" json:"chunk_locations,omitempty"`
	SessionId      string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	mi := &file_coordinator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadResponse) GetFileInfo() *FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *DownloadResponse) GetChunkLocations() []*ChunkLocation {
	if x != nil {
		return x.ChunkLocations
	}
	return nil
}

func (x *DownloadResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// Delete file request/response
type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_coordinator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_coordinator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ConfirmUpload request/response
type ConfirmUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ChunkInfos    []*ChunkInfo           `protobuf:"bytes,2,rep,name=chunk_infos,json=chunkInfos,proto3" json:"chunk_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmUploadRequest) Reset() {
	*x = ConfirmUploadRequest{}
	mi := &file_coordinator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmUploadRequest) ProtoMessage() {}

func (x *ConfirmUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmUploadRequest.ProtoReflect.Descriptor instead.
func (*ConfirmUploadRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{7}
}

func (x *ConfirmUploadRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ConfirmUploadRequest) GetChunkInfos() []*ChunkInfo {
	if x != nil {
		return x.ChunkInfos
	}
	return nil
}

type ConfirmUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmUploadResponse) Reset() {
	*x = ConfirmUploadResponse{}
	mi := &file_coordinator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmUploadResponse) ProtoMessage() {}

func (x *ConfirmUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmUploadResponse.ProtoReflect.Descriptor instead.
func (*ConfirmUploadResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{8}
}

func (x *ConfirmUploadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfirmUploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// List files request/response
type ListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Directory     string                 `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	mi := &file_coordinator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{9}
}

func (x *ListRequest) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

type ListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfo            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	mi := &file_coordinator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{10}
}

func (x *ListResponse) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

// Node management
type RegisterDataNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeInfo      *DataNodeInfo          `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDataNodeRequest) Reset() {
	*x = RegisterDataNodeRequest{}
	mi := &file_coordinator_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDataNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeRequest) ProtoMessage() {}

func (x *RegisterDataNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterDataNodeRequest) GetNodeInfo() *DataNodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

type RegisterDataNodeResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Initial full snapshot of all nodes
	FullNodeList []*DataNodeInfo `protobuf:"bytes,3,rep,name=full_node_list,json=fullNodeList,proto3" json:"full_node_list,omitempty"`
	// Current version to track incremental updates
	CurrentVersion int64 `protobuf:"varint,4,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegisterDataNodeResponse) Reset() {
	*x = RegisterDataNodeResponse{}
	mi := &file_coordinator_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDataNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataNodeResponse) ProtoMessage() {}

func (x *RegisterDataNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterDataNodeResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterDataNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterDataNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterDataNodeResponse) GetFullNodeList() []*DataNodeInfo {
	if x != nil {
		return x.FullNodeList
	}
	return nil
}

func (x *RegisterDataNodeResponse) GetCurrentVersion() int64 {
	if x != nil {
		return x.CurrentVersion
	}
	return 0
}

type HeartbeatRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	NodeId string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status *HealthStatus          `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// For node status updates, provide last seen version
	LastSeenVersion int64 `protobuf:"varint,3,opt,name=last_seen_version,json=lastSeenVersion,proto3" json:"last_seen_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_coordinator_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{13}
}

func (x *HeartbeatRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *HeartbeatRequest) GetStatus() *HealthStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *HeartbeatRequest) GetLastSeenVersion() int64 {
	if x != nil {
		return x.LastSeenVersion
	}
	return 0
}

type HeartbeatResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Incremental updates since last_seen_version
	Updates []*NodeUpdate `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty"`
	// Version range for these updates
	FromVersion int64 `protobuf:"varint,4,opt,name=from_version,json=fromVersion,proto3" json:"from_version,omitempty"`
	ToVersion   int64 `protobuf:"varint,5,opt,name=to_version,json=toVersion,proto3" json:"to_version,omitempty"`
	// Flag indicating if full resync is needed (e.g., version too old)
	RequiresFullResync bool `protobuf:"varint,6,opt,name=requires_full_resync,json=requiresFullResync,proto3" json:"requires_full_resync,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_coordinator_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{14}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HeartbeatResponse) GetUpdates() []*NodeUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *HeartbeatResponse) GetFromVersion() int64 {
	if x != nil {
		return x.FromVersion
	}
	return 0
}

func (x *HeartbeatResponse) GetToVersion() int64 {
	if x != nil {
		return x.ToVersion
	}
	return 0
}

func (x *HeartbeatResponse) GetRequiresFullResync() bool {
	if x != nil {
		return x.RequiresFullResync
	}
	return false
}

type ListNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	mi := &file_coordinator_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{15}
}

type ListNodesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Nodes          []*DataNodeInfo        `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	CurrentVersion int64                  `protobuf:"varint,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_coordinator_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{16}
}

func (x *ListNodesResponse) GetNodes() []*DataNodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListNodesResponse) GetCurrentVersion() int64 {
	if x != nil {
		return x.CurrentVersion
	}
	return 0
}

type NodeUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Monotonic version number for ordering
	Version int64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Type    NodeUpdate_UpdateType `protobuf:"varint,2,opt,name=type,proto3,enum=dfs.NodeUpdate_UpdateType" json:"type,omitempty"`
	Node    *DataNodeInfo         `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"`
	// Timestamp for debugging/monitoring
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeUpdate) Reset() {
	*x = NodeUpdate{}
	mi := &file_coordinator_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeUpdate) ProtoMessage() {}

func (x *NodeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeUpdate.ProtoReflect.Descriptor instead.
func (*NodeUpdate) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{17}
}

func (x *NodeUpdate) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *NodeUpdate) GetType() NodeUpdate_UpdateType {
	if x != nil {
		return x.Type
	}
	return NodeUpdate_NODE_ADDED
}

func (x *NodeUpdate) GetNode() *DataNodeInfo {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *NodeUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_coordinator_proto protoreflect.FileDescriptor

const file_coordinator_proto_rawDesc = "" +
	"\n" +
	"\x11coordinator.proto\x12\x03dfs\x1a\fcommon.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"r\n" +
	"\rUploadRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x03 \x01(\x03R\tchunkSize\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\"l\n" +
	"\x0eUploadResponse\x12;\n" +
	"\x0fchunk_locations\x18\x01 \x03(\v2\x12.dfs.ChunkLocationR\x0echunkLocations\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\"S\n" +
	"\rChunkLocation\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12'\n" +
	"\x05nodes\x18\x02 \x03(\v2\x11.dfs.DataNodeInfoR\x05nodes\"%\n" +
	"\x0fDownloadRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\x9a\x01\n" +
	"\x10DownloadResponse\x12*\n" +
	"\tfile_info\x18\x01 \x01(\v2\r.dfs.FileInfoR\bfileInfo\x12;\n" +
	"\x0fchunk_locations\x18\x02 \x03(\v2\x12.dfs.ChunkLocationR\x0echunkLocations\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\"#\n" +
	"\rDeleteRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"D\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"f\n" +
	"\x14ConfirmUploadRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12/\n" +
	"\vchunk_infos\x18\x02 \x03(\v2\x0e.dfs.ChunkInfoR\n" +
	"chunkInfos\"K\n" +
	"\x15ConfirmUploadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"+\n" +
	"\vListRequest\x12\x1c\n" +
	"\tdirectory\x18\x01 \x01(\tR\tdirectory\"3\n" +
	"\fListResponse\x12#\n" +
	"\x05files\x18\x01 \x03(\v2\r.dfs.FileInfoR\x05files\"I\n" +
	"\x17RegisterDataNodeRequest\x12.\n" +
	"\tnode_info\x18\x01 \x01(\v2\x11.dfs.DataNodeInfoR\bnodeInfo\"\xb0\x01\n" +
	"\x18RegisterDataNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x127\n" +
	"\x0efull_node_list\x18\x03 \x03(\v2\x11.dfs.DataNodeInfoR\ffullNodeList\x12'\n" +
	"\x0fcurrent_version\x18\x04 \x01(\x03R\x0ecurrentVersion\"\x82\x01\n" +
	"\x10HeartbeatRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12)\n" +
	"\x06status\x18\x02 \x01(\v2\x11.dfs.HealthStatusR\x06status\x12*\n" +
	"\x11last_seen_version\x18\x03 \x01(\x03R\x0flastSeenVersion\"\xe6\x01\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12)\n" +
	"\aupdates\x18\x03 \x03(\v2\x0f.dfs.NodeUpdateR\aupdates\x12!\n" +
	"\ffrom_version\x18\x04 \x01(\x03R\vfromVersion\x12\x1d\n" +
	"\n" +
	"to_version\x18\x05 \x01(\x03R\ttoVersion\x120\n" +
	"\x14requires_full_resync\x18\x06 \x01(\bR\x12requiresFullResync\"\x12\n" +
	"\x10ListNodesRequest\"e\n" +
	"\x11ListNodesResponse\x12'\n" +
	"\x05nodes\x18\x01 \x03(\v2\x11.dfs.DataNodeInfoR\x05nodes\x12'\n" +
	"\x0fcurrent_version\x18\x02 \x01(\x03R\x0ecurrentVersion\"\xf9\x01\n" +
	"\n" +
	"NodeUpdate\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\x12.\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1a.dfs.NodeUpdate.UpdateTypeR\x04type\x12%\n" +
	"\x04node\x18\x03 \x01(\v2\x11.dfs.DataNodeInfoR\x04node\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"@\n" +
	"\n" +
	"UpdateType\x12\x0e\n" +
	"\n" +
	"NODE_ADDED\x10\x00\x12\x10\n" +
	"\fNODE_REMOVED\x10\x01\x12\x10\n" +
	"\fNODE_UPDATED\x10\x022\x8a\x04\n" +
	"\x12CoordinatorService\x125\n" +
	"\n" +
	"UploadFile\x12\x12.dfs.UploadRequest\x1a\x13.dfs.UploadResponse\x12;\n" +
	"\fDownloadFile\x12\x14.dfs.DownloadRequest\x1a\x15.dfs.DownloadResponse\x125\n" +
	"\n" +
	"DeleteFile\x12\x12.dfs.DeleteRequest\x1a\x13.dfs.DeleteResponse\x120\n" +
	"\tListFiles\x12\x10.dfs.ListRequest\x1a\x11.dfs.ListResponse\x12F\n" +
	"\rConfirmUpload\x12\x19.dfs.ConfirmUploadRequest\x1a\x1a.dfs.ConfirmUploadResponse\x12O\n" +
	"\x10RegisterDataNode\x12\x1c.dfs.RegisterDataNodeRequest\x1a\x1d.dfs.RegisterDataNodeResponse\x12B\n" +
	"\x11DataNodeHeartbeat\x12\x15.dfs.HeartbeatRequest\x1a\x16.dfs.HeartbeatResponse\x12:\n" +
	"\tListNodes\x12\x15.dfs.ListNodesRequest\x1a\x16.dfs.ListNodesResponseB\vZ\tpkg/protob\x06proto3"

var (
	file_coordinator_proto_rawDescOnce sync.Once
	file_coordinator_proto_rawDescData []byte
)

func file_coordinator_proto_rawDescGZIP() []byte {
	file_coordinator_proto_rawDescOnce.Do(func() {
		file_coordinator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_coordinator_proto_rawDesc), len(file_coordinator_proto_rawDesc)))
	})
	return file_coordinator_proto_rawDescData
}

var file_coordinator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_coordinator_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_coordinator_proto_goTypes = []any{
	(NodeUpdate_UpdateType)(0),       // 0: dfs.NodeUpdate.UpdateType
	(*UploadRequest)(nil),            // 1: dfs.UploadRequest
	(*UploadResponse)(nil),           // 2: dfs.UploadResponse
	(*ChunkLocation)(nil),            // 3: dfs.ChunkLocation
	(*DownloadRequest)(nil),          // 4: dfs.DownloadRequest
	(*DownloadResponse)(nil),         // 5: dfs.DownloadResponse
	(*DeleteRequest)(nil),            // 6: dfs.DeleteRequest
	(*DeleteResponse)(nil),           // 7: dfs.DeleteResponse
	(*ConfirmUploadRequest)(nil),     // 8: dfs.ConfirmUploadRequest
	(*ConfirmUploadResponse)(nil),    // 9: dfs.ConfirmUploadResponse
	(*ListRequest)(nil),              // 10: dfs.ListRequest
	(*ListResponse)(nil),             // 11: dfs.ListResponse
	(*RegisterDataNodeRequest)(nil),  // 12: dfs.RegisterDataNodeRequest
	(*RegisterDataNodeResponse)(nil), // 13: dfs.RegisterDataNodeResponse
	(*HeartbeatRequest)(nil),         // 14: dfs.HeartbeatRequest
	(*HeartbeatResponse)(nil),        // 15: dfs.HeartbeatResponse
	(*ListNodesRequest)(nil),         // 16: dfs.ListNodesRequest
	(*ListNodesResponse)(nil),        // 17: dfs.ListNodesResponse
	(*NodeUpdate)(nil),               // 18: dfs.NodeUpdate
	(*DataNodeInfo)(nil),             // 19: dfs.DataNodeInfo
	(*FileInfo)(nil),                 // 20: dfs.FileInfo
	(*ChunkInfo)(nil),                // 21: dfs.ChunkInfo
	(*HealthStatus)(nil),             // 22: dfs.HealthStatus
	(*timestamppb.Timestamp)(nil),    // 23: google.protobuf.Timestamp
}
var file_coordinator_proto_depIdxs = []int32{
	3,  // 0: dfs.UploadResponse.chunk_locations:type_name -> dfs.ChunkLocation
	19, // 1: dfs.ChunkLocation.nodes:type_name -> dfs.DataNodeInfo
	20, // 2: dfs.DownloadResponse.file_info:type_name -> dfs.FileInfo
	3,  // 3: dfs.DownloadResponse.chunk_locations:type_name -> dfs.ChunkLocation
	21, // 4: dfs.ConfirmUploadRequest.chunk_infos:type_name -> dfs.ChunkInfo
	20, // 5: dfs.ListResponse.files:type_name -> dfs.FileInfo
	19, // 6: dfs.RegisterDataNodeRequest.node_info:type_name -> dfs.DataNodeInfo
	19, // 7: dfs.RegisterDataNodeResponse.full_node_list:type_name -> dfs.DataNodeInfo
	22, // 8: dfs.HeartbeatRequest.status:type_name -> dfs.HealthStatus
	18, // 9: dfs.HeartbeatResponse.updates:type_name -> dfs.NodeUpdate
	19, // 10: dfs.ListNodesResponse.nodes:type_name -> dfs.DataNodeInfo
	0,  // 11: dfs.NodeUpdate.type:type_name -> dfs.NodeUpdate.UpdateType
	19, // 12: dfs.NodeUpdate.node:type_name -> dfs.DataNodeInfo
	23, // 13: dfs.NodeUpdate.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 14: dfs.CoordinatorService.UploadFile:input_type -> dfs.UploadRequest
	4,  // 15: dfs.CoordinatorService.DownloadFile:input_type -> dfs.DownloadRequest
	6,  // 16: dfs.CoordinatorService.DeleteFile:input_type -> dfs.DeleteRequest
	10, // 17: dfs.CoordinatorService.ListFiles:input_type -> dfs.ListRequest
	8,  // 18: dfs.CoordinatorService.ConfirmUpload:input_type -> dfs.ConfirmUploadRequest
	12, // 19: dfs.CoordinatorService.RegisterDataNode:input_type -> dfs.RegisterDataNodeRequest
	14, // 20: dfs.CoordinatorService.DataNodeHeartbeat:input_type -> dfs.HeartbeatRequest
	16, // 21: dfs.CoordinatorService.ListNodes:input_type -> dfs.ListNodesRequest
	2,  // 22: dfs.CoordinatorService.UploadFile:output_type -> dfs.UploadResponse
	5,  // 23: dfs.CoordinatorService.DownloadFile:output_type -> dfs.DownloadResponse
	7,  // 24: dfs.CoordinatorService.DeleteFile:output_type -> dfs.DeleteResponse
	11, // 25: dfs.CoordinatorService.ListFiles:output_type -> dfs.ListResponse
	9,  // 26: dfs.CoordinatorService.ConfirmUpload:output_type -> dfs.ConfirmUploadResponse
	13, // 27: dfs.CoordinatorService.RegisterDataNode:output_type -> dfs.RegisterDataNodeResponse
	15, // 28: dfs.CoordinatorService.DataNodeHeartbeat:output_type -> dfs.HeartbeatResponse
	17, // 29: dfs.CoordinatorService.ListNodes:output_type -> dfs.ListNodesResponse
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_coordinator_proto_init() }
func file_coordinator_proto_init() {
	if File_coordinator_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_coordinator_proto_rawDesc), len(file_coordinator_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coordinator_proto_goTypes,
		DependencyIndexes: file_coordinator_proto_depIdxs,
		EnumInfos:         file_coordinator_proto_enumTypes,
		MessageInfos:      file_coordinator_proto_msgTypes,
	}.Build()
	File_coordinator_proto = out.File
	file_coordinator_proto_goTypes = nil
	file_coordinator_proto_depIdxs = nil
}
